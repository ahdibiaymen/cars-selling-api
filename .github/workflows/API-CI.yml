name: API-CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:


defaults:
  run:
    working-directory: ./cars_api
jobs:
  unify-code:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black isort

      - name: Python Isort
        run: |
          isort --profile black --line-length 100 .
      - name: Python Black
        run: |
          black --line-length=100 --preview .

      - name: Auto-commit updated files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Automated code unifying
          add_options: "-u"


  lint-and-test:
    needs: unify-code
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-asyncio
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt;
        else
          echo requirements.txt not found!
        fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --extend-exclude=tests/* --ignore=E712,W503
        # exit-zero treats all errors as warnings. The GitHub editor is 90 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=90 --statistics --ignore=E712,W503

    - name: Test with pytest
      run: |
          pytest --ignore-warnings


  code-security-check:
    needs: lint-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt;
          else
            echo requirements.txt not found!
          fi
      - name: Bandit scanner
        run: |
          bandit -r -ll .





#bandit
